// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Schema for furniture ERP shop
// To manage retail and wholesale and warehouse

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model client {
  id      String @id @default(uuid())
  name    String
  email   String @unique
  phone   String @unique
  address String
  // code    String @unique

  User User[]

  // GST details

  createdAt DateTime    @default(now()) @db.Timestamp()
  updatedAt DateTime    @updatedAt @db.Timestamp()
  Product   Product[]
  Category  Category[]
  Warehouse Warehouse[]
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  firstName       String?
  lastName        String?
  phone           String?
  avatar          String?
  password        String
  role            Role      @default(USER)
  createdProducts Product[] @relation("CreatedByRelation")
  updatedProducts Product[] @relation("UpdatedByRelation")

  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
  client    client?  @relation(fields: [clientId], references: [id])
  clientId  String?
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String?
  code        String
  sku         String?

  // pricing
  baseAmount   Float
  taxSlab      Float
  taxAmount    Float
  totalAmount  Float
  otherCharges Float // tax free

  images String[]
  tags   String[]

  category         Category            @relation(fields: [categoryId], references: [id])
  categoryId       String
  client           client              @relation(fields: [clientId], references: [id])
  clientId         String
  warehouseProduct Warehouse_Product[]

  updatedBy   User?    @relation("UpdatedByRelation", fields: [updatedById], references: [id])
  updatedById String
  createdBy   User     @relation("CreatedByRelation", fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt   DateTime @updatedAt @db.Timestamp()
}

model Category {
  id   String @id @default(uuid())
  name String

  createdAt DateTime  @default(now()) @db.Timestamp()
  updatedAt DateTime  @updatedAt @db.Timestamp()
  products  Product[]

  client   client @relation(fields: [clientId], references: [id])
  clientId String
}

model Warehouse {
  id       String @id @default(uuid())
  name     String
  location String
  address  String

  createdAt        DateTime            @default(now()) @db.Timestamp()
  updatedAt        DateTime            @updatedAt @db.Timestamp()
  warehouseProduct Warehouse_Product[]

  client   client @relation(fields: [clientId], references: [id])
  clientId String
}

model Warehouse_Product {
  id          String    @id @default(uuid())
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  stock       Int

  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
}
